/****************************************************************************
 *
 *   Copyright (C) 2013-2016 PX4 Development Team. All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 *
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in
 *    the documentation and/or other materials provided with the
 *    distribution.
 * 3. Neither the name PX4 nor the names of its contributors may be
 *    used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
 * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
 * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
 * FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE
 * COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
 * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
 * BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS
 * OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED
 * AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
 * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 * POSSIBILITY OF SUCH DAMAGE.
 *
 ****************************************************************************/

/* Auto-generated by genmsg_cpp from file landing_target_pose.msg */


#include <cinttypes>
#include <cstdio>
#include <px4_defines.h>
#include <uORB/topics/landing_target_pose.h>
#include <drivers/drv_hrt.h>

constexpr char __orb_landing_target_pose_fields[] = "uint64_t timestamp;float x_rel;float y_rel;float z_rel;float vx_rel;float vy_rel;float cov_x_rel;float cov_y_rel;float cov_vx_rel;float cov_vy_rel;float x_abs;float y_abs;float z_abs;bool is_static;bool rel_pos_valid;bool rel_vel_valid;bool abs_pos_valid;uint8_t[4] _padding0;";

ORB_DEFINE(landing_target_pose, struct landing_target_pose_s, 60, __orb_landing_target_pose_fields);


void print_message(const landing_target_pose_s& message)
{
	printf(" landing_target_pose_s\n");
	printf("\ttimestamp: %" PRIu64, message.timestamp);
	if (message.timestamp != 0) {
		printf(" (%.6f seconds ago)\n", hrt_elapsed_time(&message.timestamp) / 1e6);
	} else {
		printf("\n");
	}
	printf("\tx_rel: %.3f\n", (double)message.x_rel);
	printf("\ty_rel: %.3f\n", (double)message.y_rel);
	printf("\tz_rel: %.3f\n", (double)message.z_rel);
	printf("\tvx_rel: %.3f\n", (double)message.vx_rel);
	printf("\tvy_rel: %.3f\n", (double)message.vy_rel);
	printf("\tcov_x_rel: %.3f\n", (double)message.cov_x_rel);
	printf("\tcov_y_rel: %.3f\n", (double)message.cov_y_rel);
	printf("\tcov_vx_rel: %.3f\n", (double)message.cov_vx_rel);
	printf("\tcov_vy_rel: %.3f\n", (double)message.cov_vy_rel);
	printf("\tx_abs: %.3f\n", (double)message.x_abs);
	printf("\ty_abs: %.3f\n", (double)message.y_abs);
	printf("\tz_abs: %.3f\n", (double)message.z_abs);
	printf("\tis_static: %u\n", message.is_static);
	printf("\trel_pos_valid: %u\n", message.rel_pos_valid);
	printf("\trel_vel_valid: %u\n", message.rel_vel_valid);
	printf("\tabs_pos_valid: %u\n", message.abs_pos_valid);
	}