/****************************************************************************
 *
 *   Copyright (C) 2013-2016 PX4 Development Team. All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 *
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in
 *    the documentation and/or other materials provided with the
 *    distribution.
 * 3. Neither the name PX4 nor the names of its contributors may be
 *    used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
 * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
 * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
 * FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE
 * COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
 * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
 * BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS
 * OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED
 * AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
 * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 * POSSIBILITY OF SUCH DAMAGE.
 *
 ****************************************************************************/

/* Auto-generated by genmsg_cpp from file uavcan_parameter_request.msg */


#include <cinttypes>
#include <cstdio>
#include <px4_defines.h>
#include <uORB/topics/uavcan_parameter_request.h>
#include <drivers/drv_hrt.h>

constexpr char __orb_uavcan_parameter_request_fields[] = "uint64_t timestamp;int64_t int_value;float real_value;int16_t param_index;uint8_t message_type;uint8_t node_id;char[17] param_id;uint8_t param_type;uint8_t[6] _padding0;";

ORB_DEFINE(uavcan_parameter_request, struct uavcan_parameter_request_s, 42, __orb_uavcan_parameter_request_fields);


void print_message(const uavcan_parameter_request_s& message)
{
	printf(" uavcan_parameter_request_s\n");
	printf("\ttimestamp: %" PRIu64, message.timestamp);
	if (message.timestamp != 0) {
		printf(" (%.6f seconds ago)\n", hrt_elapsed_time(&message.timestamp) / 1e6);
	} else {
		printf("\n");
	}
	printf("\tint_value: %" PRId64 "\n", message.int_value);
	printf("\treal_value: %.3f\n", (double)message.real_value);
	printf("\tparam_index: %d\n", message.param_index);
	printf("\tmessage_type: %u\n", message.message_type);
	printf("\tnode_id: %u\n", message.node_id);
	printf("\tparam_id: [%c, %c, %c, %c, %c, %c, %c, %c, %c, %c, %c, %c, %c, %c, %c, %c, %c]\n", message.param_id[0], message.param_id[1], message.param_id[2], message.param_id[3], message.param_id[4], message.param_id[5], message.param_id[6], message.param_id[7], message.param_id[8], message.param_id[9], message.param_id[10], message.param_id[11], message.param_id[12], message.param_id[13], message.param_id[14], message.param_id[15], message.param_id[16]);
	printf("\tparam_type: %u\n", message.param_type);
	}