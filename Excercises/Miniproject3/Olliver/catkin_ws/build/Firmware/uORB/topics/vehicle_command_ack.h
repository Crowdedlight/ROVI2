/****************************************************************************
 *
 *   Copyright (C) 2013-2016 PX4 Development Team. All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 *
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in
 *    the documentation and/or other materials provided with the
 *    distribution.
 * 3. Neither the name PX4 nor the names of its contributors may be
 *    used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
 * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
 * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
 * FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE
 * COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
 * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
 * BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS
 * OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED
 * AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
 * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 * POSSIBILITY OF SUCH DAMAGE.
 *
 ****************************************************************************/

/* Auto-generated by genmsg_cpp from file vehicle_command_ack.msg */


#pragma once


#include <uORB/uORB.h>


#ifndef __cplusplus
#define VEHICLE_RESULT_ACCEPTED 0
#define VEHICLE_RESULT_TEMPORARILY_REJECTED 1
#define VEHICLE_RESULT_DENIED 2
#define VEHICLE_RESULT_UNSUPPORTED 3
#define VEHICLE_RESULT_FAILED 4
#define VEHICLE_RESULT_IN_PROGRESS 5
#define ARM_AUTH_DENIED_REASON_GENERIC 0
#define ARM_AUTH_DENIED_REASON_NONE 1
#define ARM_AUTH_DENIED_REASON_INVALID_WAYPOINT 2
#define ARM_AUTH_DENIED_REASON_TIMEOUT 3
#define ARM_AUTH_DENIED_REASON_AIRSPACE_IN_USE 4
#define ARM_AUTH_DENIED_REASON_BAD_WEATHER 5
#define ORB_QUEUE_LENGTH 3

#endif


#ifdef __cplusplus
struct __EXPORT vehicle_command_ack_s {
#else
struct vehicle_command_ack_s {
#endif
	uint64_t timestamp; // required for logger
	int32_t result_param2;
	uint16_t command;
	uint8_t result;
	bool from_external;
	uint8_t result_param1;
	uint8_t target_system;
	uint8_t target_component;
	uint8_t _padding0[5]; // required for logger


#ifdef __cplusplus
	static constexpr uint8_t VEHICLE_RESULT_ACCEPTED = 0;
	static constexpr uint8_t VEHICLE_RESULT_TEMPORARILY_REJECTED = 1;
	static constexpr uint8_t VEHICLE_RESULT_DENIED = 2;
	static constexpr uint8_t VEHICLE_RESULT_UNSUPPORTED = 3;
	static constexpr uint8_t VEHICLE_RESULT_FAILED = 4;
	static constexpr uint8_t VEHICLE_RESULT_IN_PROGRESS = 5;
	static constexpr uint16_t ARM_AUTH_DENIED_REASON_GENERIC = 0;
	static constexpr uint16_t ARM_AUTH_DENIED_REASON_NONE = 1;
	static constexpr uint16_t ARM_AUTH_DENIED_REASON_INVALID_WAYPOINT = 2;
	static constexpr uint16_t ARM_AUTH_DENIED_REASON_TIMEOUT = 3;
	static constexpr uint16_t ARM_AUTH_DENIED_REASON_AIRSPACE_IN_USE = 4;
	static constexpr uint16_t ARM_AUTH_DENIED_REASON_BAD_WEATHER = 5;
	static constexpr uint32_t ORB_QUEUE_LENGTH = 3;

#endif
};

/* register this as object request broker structure */
ORB_DECLARE(vehicle_command_ack);


#ifdef __cplusplus
void print_message(const vehicle_command_ack_s& message);
#endif
