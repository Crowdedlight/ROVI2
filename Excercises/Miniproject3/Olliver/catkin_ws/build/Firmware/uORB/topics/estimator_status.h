/****************************************************************************
 *
 *   Copyright (C) 2013-2016 PX4 Development Team. All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 *
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in
 *    the documentation and/or other materials provided with the
 *    distribution.
 * 3. Neither the name PX4 nor the names of its contributors may be
 *    used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
 * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
 * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
 * FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE
 * COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
 * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
 * BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS
 * OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED
 * AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
 * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 * POSSIBILITY OF SUCH DAMAGE.
 *
 ****************************************************************************/

/* Auto-generated by genmsg_cpp from file estimator_status.msg */


#pragma once


#include <uORB/uORB.h>


#ifndef __cplusplus
#define GPS_CHECK_FAIL_GPS_FIX 0
#define GPS_CHECK_FAIL_MIN_SAT_COUNT 1
#define GPS_CHECK_FAIL_MIN_GDOP 2
#define GPS_CHECK_FAIL_MAX_HORZ_ERR 3
#define GPS_CHECK_FAIL_MAX_VERT_ERR 4
#define GPS_CHECK_FAIL_MAX_SPD_ERR 5
#define GPS_CHECK_FAIL_MAX_HORZ_DRIFT 6
#define GPS_CHECK_FAIL_MAX_VERT_DRIFT 7
#define GPS_CHECK_FAIL_MAX_HORZ_SPD_ERR 8
#define GPS_CHECK_FAIL_MAX_VERT_SPD_ERR 9

#endif


#ifdef __cplusplus
struct __EXPORT estimator_status_s {
#else
struct estimator_status_s {
#endif
	uint64_t timestamp; // required for logger
	float states[24];
	float n_states;
	float vibe[3];
	float covariances[24];
	uint32_t control_mode_flags;
	float pos_horiz_accuracy;
	float pos_vert_accuracy;
	float mag_test_ratio;
	float vel_test_ratio;
	float pos_test_ratio;
	float hgt_test_ratio;
	float tas_test_ratio;
	float hagl_test_ratio;
	float beta_test_ratio;
	float time_slip;
	uint16_t gps_check_fail_flags;
	uint16_t filter_fault_flags;
	uint16_t innovation_check_flags;
	uint16_t solution_status_flags;
	uint8_t nan_flags;
	uint8_t health_flags;
	uint8_t timeout_flags;
	bool pre_flt_fail;


#ifdef __cplusplus
	static constexpr uint16_t GPS_CHECK_FAIL_GPS_FIX = 0;
	static constexpr uint16_t GPS_CHECK_FAIL_MIN_SAT_COUNT = 1;
	static constexpr uint16_t GPS_CHECK_FAIL_MIN_GDOP = 2;
	static constexpr uint16_t GPS_CHECK_FAIL_MAX_HORZ_ERR = 3;
	static constexpr uint16_t GPS_CHECK_FAIL_MAX_VERT_ERR = 4;
	static constexpr uint16_t GPS_CHECK_FAIL_MAX_SPD_ERR = 5;
	static constexpr uint16_t GPS_CHECK_FAIL_MAX_HORZ_DRIFT = 6;
	static constexpr uint16_t GPS_CHECK_FAIL_MAX_VERT_DRIFT = 7;
	static constexpr uint16_t GPS_CHECK_FAIL_MAX_HORZ_SPD_ERR = 8;
	static constexpr uint16_t GPS_CHECK_FAIL_MAX_VERT_SPD_ERR = 9;

#endif
};

/* register this as object request broker structure */
ORB_DECLARE(estimator_status);


#ifdef __cplusplus
void print_message(const estimator_status_s& message);
#endif
